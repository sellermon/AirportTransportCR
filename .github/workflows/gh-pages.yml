name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check for custom domain
        id: check-domain
        run: |
          if [ -f "CNAME" ]; then
            echo "base=/" >> $GITHUB_OUTPUT
            echo "has_custom_domain=true" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.repository.name }}" == *".github.io" ]]; then
            echo "base=/" >> $GITHUB_OUTPUT
            echo "has_custom_domain=false" >> $GITHUB_OUTPUT
          else
            echo "base=/${{ github.event.repository.name }}/" >> $GITHUB_OUTPUT
            echo "has_custom_domain=false" >> $GITHUB_OUTPUT
          fi

      - name: Build static site
        run: npx vite build --base="${{ steps.check-domain.outputs.base }}"

      - name: Copy CNAME to build directory
        if: steps.check-domain.outputs.has_custom_domain == 'true'
        run: cp CNAME dist/public/

      - name: Create .nojekyll file
        run: touch dist/public/.nojekyll

      - name: Create 404.html for SPA routing
        run: cp dist/public/index.html dist/public/404.html

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist/public'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4